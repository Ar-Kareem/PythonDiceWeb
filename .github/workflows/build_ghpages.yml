# This is a basic workflow to help you get started with Actions

name: Node.js CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]  # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v4
      - name: npm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./frontend

      - name: Install dependencies  
        run: npm ci
        working-directory: ./frontend

      - name: Build Angular Project | Use Node.js ${{ matrix.node-version }}
        run: ng build --output-path ../docs --base-href https://ar-kareem.github.io/PythonDiceWeb/
        working-directory: ./frontend

      - name: Move
        run: mv ../docs/browser/* ../docs/ 
        working-directory: ./frontend

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: build_files
          path: docs


  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: build_files
